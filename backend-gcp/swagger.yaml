# swagger.yaml - Stratégie de transmission ("passthrough")
swagger: '2.0'
info:
  title: 'Oracle Prediction API (Passthrough Strategy)'
  version: '10.0.0' # Version majeure pour marquer la nouvelle stratégie
schemes:
  - https
produces:
  - application/json

securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/oracle-prediction-app"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com"
    x-google-audiences: "oracle-prediction-app"

paths:
  # Règle "joker" pour capturer toutes les URLs (ex: /api/tickets, /health)
  /{proxy+}:
    # La méthode OPTIONS est spéciale: on la transmet au backend SANS appliquer de sécurité.
    # C'est la clé de la résolution du problème 404.
    options:
      summary: "CORS preflight passthrough"
      operationId: "cors-preflight-passthrough"
      x-google-backend:
        address: https://oracle-prediction-football-321557095918.europe-west1.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        # La réponse (200 OK) sera générée par le backend, la Gateway n'a qu'à la transmettre.
        'default':
          description: "CORS preflight response from backend"

    # Pour toutes les autres méthodes (GET, POST...), on applique la sécurité Firebase.
    get:
      summary: "Generic GET with security"
      operationId: "get-passthrough"
      security:
        - firebase: []
      x-google-backend:
        address: https://oracle-prediction-football-321557095918.europe-west1.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        'default':
          description: "Default GET response from backend"

